{"version":3,"sources":["../../src/utils/filesystem.js"],"names":["fs","promisifyAll","getDirectories","srcpath","readdirAsync","filter","file","statSync","join","isDirectory","notADir","statAsync","then","stat","catch"],"mappings":"gIAAA,wB;AACA,4B;AACA,oC;;AAEA,MAAMA,KAAK,mBAAQC,YAAR,cAAX;;;AAGO,MAAMC,0CAAiBC,WAAWH,GAAGI,YAAH,CAAgBD,OAAhB,EAAyB;AAAzB,CACtCE,MADsC,CAC/BC,QAAQN,GAAGO,QAAH,CAAY,eAAKC,IAAL,CAAUL,OAAV,EAAmBG,IAAnB,CAAZ,EAAsCG,WAAtC,EADuB,CAAlC;;AAGP;AACA;AACO,MAAMC,4BAAUP;AACrBH,GAAGW,SAAH,CAAaR,OAAb;AACGS,IADH,CACQC,QAAQ,CAACA,KAAKJ,WAAL,EADjB;AAEGK,KAFH,CAES,MAAM,IAFf,CADK","file":"filesystem.js","sourcesContent":["import fsOrig from 'fs';\nimport path from 'path';\nimport Promise from 'bluebird';\n\nconst fs = Promise.promisifyAll(fsOrig);\n\n\nexport const getDirectories = srcpath => fs.readdirAsync(srcpath) // eslint-disable-line\n  .filter(file => fs.statSync(path.join(srcpath, file)).isDirectory());\n\n// This is unusual, but I found that I cannot simply say !dirExists if dirExists returns a Promise.\n// The promise always exists\nexport const notADir = srcpath =>\n  fs.statAsync(srcpath)\n    .then(stat => !stat.isDirectory())\n    .catch(() => true);\n"]}