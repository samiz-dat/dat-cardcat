{"version":3,"sources":["../../src/utils/health.js"],"names":["monitor","archive","health","setInterval","data","get","console","log","peers","length","bytes","blocks","have"],"mappings":";;;AAGwBA,O,CAHxB,0C,uJAEA;AACe,SAASA,OAAT,CAAiBC,OAAjB,EAA0B,CACvC,MAAMC,SAAS,2BAAOD,OAAP,CAAf;;AAEA;AACAE,cAAY,MAAM;AAChB,UAAMC,OAAOF,OAAOG,GAAP,EAAb;AACAC,YAAQC,GAAR,CAAYH,KAAKI,KAAL,CAAWC,MAAvB,EAA+B,aAA/B;AACAH,YAAQC,GAAR,CAAYH,KAAKM,KAAjB,EAAwB,aAAxB;AACAJ,YAAQC,GAAR,CAAYH,KAAKO,MAAjB,EAAyB,cAAzB;AACAL,YAAQC,GAAR,CAAa,qBAAqBH,KAAKI,KAAL,CAAW,CAAX,EAAcI,IAAd,GAAqBR,KAAKI,KAAL,CAAW,CAAX,EAAcG,MAApC,GAA8C,GAAI,GAAnF;AACD,GAND,EAMG,IANH;AAOD","file":"health.js","sourcesContent":["import Health from 'hyperhealth';\n\n// Gets Health\nexport default function monitor(archive) {\n  const health = Health(archive);\n\n  // Will fire every 1 second\n  setInterval(() => {\n    const data = health.get();\n    console.log(data.peers.length, 'total peers');\n    console.log(data.bytes, 'total bytes');\n    console.log(data.blocks, 'total blocks');\n    console.log(`Peer 1 Downloaded ${(data.peers[0].have / data.peers[0].blocks) * 100}%`);\n  }, 1000);\n}\n"]}