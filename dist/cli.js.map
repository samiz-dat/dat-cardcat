{"version":3,"sources":["../src/cli.js"],"names":["dataDir","join","process","cwd","get","existsSync","mkdirSync","pending","env","npm_config_discover","then","c","discoverDats","getAuthors","rows","console","log","length","npm_config_numAuthors","npm_config_dat","tap","importDat","key","name","npm_config_name","sparse","npm_config_dir","importDir","catch","e","npm_config_checkout","npm_config_author","npm_config_title","getDatsWithTitle","checkout","shift","dat","finally","npm_config_listAuthors","doc","author","count","npm_config_search","search","title","npm_config_opf","data","authors","npm_config_getTitles","getTitlesForAuthor","npm_config_getFiles","getFiles","file","npm_config_getOpf","getOpf","opf","i","identifiers","description","undefined","Promise","resolve","error"],"mappings":"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","file":"cli.js","sourcesContent":["import path from 'path';\nimport fs from 'fs';\nimport { readOPF } from 'open-packaging-format';\nimport { createCatalog } from './catalog';\nimport config from './config';\n\n// Directory to store all the data in (should be a config option)\nconst dataDir = path.join(process.cwd(), config.get('dataDir'));\n// Create data directory if it doesn't exist yet\nif (!fs.existsSync(dataDir)) {\n  fs.mkdirSync(dataDir);\n}\n\nlet pending;\n\n// npm run cli --discover\nif (process.env.npm_config_discover) {\n  pending = createCatalog(dataDir)\n    .then(c => c.discoverDats())\n    .then(c => c.getAuthors())\n    .then((rows) => {\n      console.log(`${rows.length} authors`);\n    });\n// npm run cli --numAuthors\n} else if (process.env.npm_config_numAuthors) {\n  pending = createCatalog(dataDir)\n    .then(c => c.getAuthors())\n    .then((rows) => {\n      console.log(`${rows.length} authors`);\n    });\n// npm run cli --dat=datkey --name=\"A Nice Name\"\n} else if (process.env.npm_config_dat) {\n  pending = createCatalog(dataDir)\n    .tap(c => c.discoverDats())\n    .then(c => c.importDat({\n      key: process.env.npm_config_dat,\n      name: process.env.npm_config_name,\n      sparse: true }));\n// npm run cli --dir=\"/Path/to/Dir/to/Add\" --name=\"A Nice Name\"\n} else if (process.env.npm_config_dir) {\n  pending = createCatalog(dataDir)\n    .tap(c => c.discoverDats())\n    .then(c => c.importDir(process.env.npm_config_dir, process.env.npm_config_name))\n    .catch(e => console.log(e));\n// npm run cli --checlout --author=\"A Name\" --title=\"A Title\"\n} else if (process.env.npm_config_checkout\n    && process.env.npm_config_author\n    && process.env.npm_config_title) {\n  pending = createCatalog(dataDir)\n    .then(c => (\n      c.discoverDats()\n        .then(() => c.getDatsWithTitle(process.env.npm_config_author, process.env.npm_config_title))\n        .then(rows => c.checkout(process.env.npm_config_author, process.env.npm_config_title, rows.shift().dat))\n    ))\n    .finally(() => console.log('Finished downloading...'));\n// npm run cli --listAuthors\n} else if (process.env.npm_config_listAuthors) {\n  pending = createCatalog(dataDir)\n    .then(c => c.getAuthors())\n    .then((rows) => {\n      for (const doc of rows) {\n        console.log(`${doc.author} (${doc.count} items)`);\n      }\n    });\n// npm run cli --search=query\n} else if (process.env.npm_config_search) {\n  pending = createCatalog(dataDir)\n    .then(c => c.search(process.env.npm_config_search))\n    .then((rows) => {\n      for (const doc of rows) {\n        console.log(`${doc.author}, \"${doc.title}\"`);\n      }\n    });\n// npm run cli --opf=/dir/to/file.opf\n} else if (process.env.npm_config_opf) {\n  pending = readOPF(process.env.npm_config_opf)\n    .then(data =>\n      console.log(data.authors),\n    );\n// npm run cli --getTitles --author=\"Author Name\"\n} else if (process.env.npm_config_getTitles\n  && process.env.npm_config_author) {\n  pending = createCatalog(dataDir)\n    .then(c => c.getTitlesForAuthor(process.env.npm_config_author))\n    .then((rows) => {\n      for (const doc of rows) {\n        console.log(`${doc.title} in dat:${doc.dat}`);\n      }\n    });\n// npm run cli --getFiles --author=\"Author Name\" --title=\"Title of text\"\n} else if (process.env.npm_config_getFiles\n  && process.env.npm_config_author\n  && process.env.npm_config_title) {\n  pending = createCatalog(dataDir)\n    .then(c => c.getFiles(process.env.npm_config_author, process.env.npm_config_title))\n    .then((rows) => {\n      for (const doc of rows) {\n        console.log(`${doc.file} in dat:${doc.dat}`);\n      }\n    });\n  // npm run cli --getOpf --author=\"Author Name\" --title=\"Title of text\"\n} else if (process.env.npm_config_getOpf\n    && process.env.npm_config_author\n    && process.env.npm_config_title) {\n  pending = createCatalog(dataDir)\n    .then(c => c.getOpf(process.env.npm_config_author, process.env.npm_config_title))\n    .then((opf) => {\n      console.log(`Title: ${opf.title}`);\n      console.log(`Authors: ${opf.authors}`);\n      console.log('Identifiers:');\n      for (const i of opf.identifiers) {\n        console.log(i);\n      }\n      console.log(`Description: ${opf.description}`);\n      console.log(`An undefined field: ${opf.undefined}`);\n    });\n} else { // by default print help\n  console.log('--dat=datkey --name=\"A Nice Name\"\\tImport a new dat to your catalog');\n  console.log('--dir=\"/Path/to/Dir/to/Add\" --name=\"A Nice Name\"\\tImport a local directory');\n  console.log('--checkout --author=\"A Name\" --title=\"A Title\"');\n  console.log('--numAuthors\\tPrint the number of authors in the catalog');\n  console.log('--listAuthors\\tLists the authors in the catalog');\n  console.log('--search\\tQueries the catalog');\n  console.log('--getTitles --author=\"Author Name\"');\n  console.log('--getFiles --author=\"Author Name\" --title=\"Title of text\"');\n  console.log('--getOpf --author=\"Author Name\" --title=\"Title of text\"');\n  console.log('--opf=/dir/to/file.opf');\n}\n\nPromise.resolve(pending).catch(console.error);\n"]}